name: Build

on:
  push:
    branches: [develop]
    tags-ignore:
      - '**'

  pull_request:

  release:
    types: [published]

jobs:
  Dist:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GOPATH: /home/runner/go

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set Go version
      id: go_version
      run: |
        GO_VERSION=$(cat .gover | sed 's/^go//' )
        echo "::set-output name=version::${GO_VERSION}"

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ steps.go_version.outputs.version }}

    - name: Cache Godel assets
      uses: actions/cache@v2
      with:
        path: ~/.godel
        key: ${{ runner.os }}-godel-${{ hashFiles('godelw', 'godel/config/godel.yml') }}
        restore-keys: |
          ${{ runner.os }}-godel-

    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: 12

    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install frontend dependencies
      run: yarn install

    - name: Build frontend
      run: yarn run build:production

    - name: Build distribution
      run: ./godelw dist

    - name: Build Docker image
      run: ./godelw docker build --verbose

    - name: Login to Docker Hub
      if: ${{ github.event_name == 'push' || github.event_name == 'release' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push image to Docker Hub
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
      run: ./godelw docker push --tags=snapshot,latest,version
